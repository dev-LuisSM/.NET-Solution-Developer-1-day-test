@{
    ViewBag.Title = "Home Page";
}

<div id="app">
    <h1>My Photo Gallery</h1>

    <div class="gallery" data-gallery></div>
    <div class="settings">
        <label for="itemsQty">Items per page:</label>
        <input type="number" min="1" max="5000" id="itemsQty" name="itemsQty" data-rows>
        <input type="button" value="Change quantity per page" data-button/>

        <div class="pageNumbers" data-pageNumbers></div>
    </div>
</div>

@section scripts{
    <script>

        const photoArray = @Html.Raw(Json.Encode(@Model));
        const gallery = document.querySelector('[data-gallery]');
        const pageNumber = document.querySelector('[data-pageNumbers]');
        const rowPage = document.querySelector('[data-rows]');
        const buttonChange = document.querySelector('[data-button]');

        let current_page = 1;
        let rows = 100;

        const DisplayList = (items, wrapper, rows_per_page, page) => {
            wrapper.innerHTML = "";
            page--;

            let start = rows_per_page * page;
            let end = start + rows_per_page;
            let paginatedItems = items.slice(start, end);

            for (let i in paginatedItems) {
                let txt = paginatedItems[i].title;
                let imgSrc = paginatedItems[i].thumbnailUrl;
                let imgHref = paginatedItems[i].url;

                let picture = document.createElement('picture');
                let image = document.createElement('a');
                let thumbnail = document.createElement('img');
                let title = document.createElement('p');
                image.href = imgHref;
                image.setAttribute('target', '_blank');
                title.innerText = txt;
                thumbnail.src = imgSrc;

                image.appendChild(thumbnail);
                picture.appendChild(image);
                picture.appendChild(title);

                wrapper.appendChild(picture);
            }
        };

        const PaginationButton = (page, items) => {
            let button = document.createElement('button');
            button.innerText = page;

            if (current_page == page) button.classList.add('active');
            button.addEventListener('click', function () {
                current_page = page;
                DisplayList(items, gallery, rows, current_page);
                let current_btn = document.querySelector('button.active');
                current_btn.classList.remove('active');

                button.classList.add('active');
            });

            return button;
        }

        const SetupPagination = (items, wrapper, rows_per_page) => {
            wrapper.innerHTML = "";

            let page_count = Math.ceil(items.length / rows_per_page);
            for (let i = 1; i < page_count + 1; i++) {
                let btn = PaginationButton(i, items);
                wrapper.appendChild(btn);
            }
        }

        DisplayList(photoArray, gallery, rows, current_page);
        SetupPagination(photoArray, pageNumber, rows);


        buttonChange.addEventListener('click', () => {
            rows = rowPage.value;
            DisplayList(photoArray, gallery, rows, current_page);
            SetupPagination(photoArray, pageNumber, rows);
        })
    </script>}